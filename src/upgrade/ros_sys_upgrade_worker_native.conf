## Check for update start

## Set variables
## Update channel can take values before 6.43.8: bugfix    | current | development | release-candidate
## Update channel can take values after  6.43.8: long-term | stable  | development | testing
:local UpdateChannel "stable";


## Upgrade firmware

## Let's check for updated firmware
:log info ("Checking firmware upgrade status")

:local RebootRequired false

/system routerboard

:if ( [get current-firmware] != [get upgrade-firmware]) do={

   ## New version of firmware available, let's upgrade
   ## Notify via Log
   :log info ("Upgrading firmware of $[/system identity get name] from $[/system routerboard get current-firmware] to $[/system routerboard get upgrade-firmware]")
   ## Upgrade (it will no reboot, we'll do it later)
   upgrade
   :set RebootRequired true

}

## Upgrade RouterOS

## Check for update
/system package update
set channel=$UpdateChannel
check-for-updates

## Wait on slow connections
:delay 60s;

## Important note: "installed-version" was "current-version" on older RoterOSes
:if ([get installed-version] != [get latest-version]) do={
    ## Notify via Log
    :log info ("$[/system identity get name] can be updated from $[/system package update get installed-version] to $[/system package update get latest-version] (channel: $[/system package update get channel])")
    :log info ("Preparing to update RouterOS")
    :delay 210s;
    :log info ("Start updating :) ")
    ## Wait for sometime & upgrade
    :delay 90s;
    install
} else={
    :if ($RebootRequired) do={
        # Firmware was upgraded, but not RouterOS, so we need to reboot to finish firmware upgrade
        :log info ("A firmware reboot is required, system is about to reboot in a few minutes")
        :delay 210s;
        :log info ("System is about to reboot :) ")
        :delay 90s;
        /system reboot
    } else={
        # No firmware nor RouterOS upgrade available, nothing to do, just log info
        :log info ("Current RouterOS version of $[/system identity get name] is $[/system package update get installed-version], good")
        :log info ("No newer RouterOS found. Just be relaxed, smile, and stay cool :) ")
    }
}

## Check for update end

