## Fox RouterOS Notification
:local Project "RESOURCES REPORT";
:local WanInterface "pppoe-out1";            # Need to customize
:local updChannel "stable";

## Check For Upgrade
:local SystemVer [/system package update get installed-version ];
:local UpstreamVer;
:local Status;
:local Channel;

:if ($UpstreamVer = nothing) do={
    /system package update set channel=$updChannel
    /system package update check-for-updates
    :delay 10s;
    :set UpstreamVer [/system package update get latest-version ];
    :set Status [/system package update get status ];
    :set Channel [/system package update get channel ];
    }; #Change
## Check For Upgrade End

## Check Licence Status
:local Level [/system license get level ];
:local Renewal [/system license get next-renewal-at ];
:local Deadline [/system license get deadline-at ];
## Check Licence Status End

## Check CPU Status
:local CpuCores [/system resource get cpu-count ];
:local CpuLoad [/system resource get cpu-load ];
:local CpuFrequency [/system resource get cpu-frequency ];
## Check CPU Status End

## Check Memory Status
:local MemoryFree [/system resource get free-memory ];
:local MemoryTotal [/system resource get total-memory ];
## Check Memory Status End

## Check Disk Status
:local DiskFree [/system resource get free-hdd-space ];
:local DiskTotal [/system resource get total-hdd-space ];
:local DiskWrites [/system resource get write-sect-since-reboot ];
:local DiskWritesTotal [/system resource get write-sect-total ];
## Check Disk Status End

## Check WAN Status
:local WanIP [/ip address get [/ip address find interface=$WanInterface] address ];
:local WanNetwork [/ip address get [/ip address find interface=$WanInterface] network ];
:local WanLinkDownTime [/interface get $WanInterface last-link-down-time ];
:local WanLinkUpTime [/interface get $WanInterface last-link-up-time ];
:local WanLinkDowns [/interface get $WanInterface link-downs ];
:local WanTx [/interface get $WanInterface tx-byte ];
:local WanRx [/interface get $WanInterface rx-byte ];
:local WanTxDrop [/interface get $WanInterface tx-drop ];
:local WanRxDrop [/interface get $WanInterface rx-drop ];
:local WanTxError [/interface get $WanInterface tx-error ];
:local WanRxError [/interface get $WanInterface rx-error ];
## Check WAN Status End

## Resolve Mail Server
:local MailServer "smtp.163.com";                    # Need to customize
:local MailPort "465";
:local MailTls "yes";
:local SendFrom "your_163_email_account@163.com";    # Need to customize
:local SendTo "your_qq_email_account@qq.com";        # Need to customize
:local MailIp;
:set MailIp [:resolve $MailServer ];
:delay 1s;
## Resolve End

:local DeviceName [/system identity get name ];
:local Time [/system clock get time ];
:local Date [/system clock get date ];
:local Uptime [/system resource get uptime ];

/tool e-mail send server=$MailIp port=$MailPort tls=$MailTls from=$SendFrom to=$SendTo \
subject="$DeviceName $Project: [Uptime: $Uptime] [$Date $Time]" \
body="
====== RouterOS Daily Report ====== \r\n\r

Router Name: $DeviceName \r
System Date: $Date $Time \r
System Uptime: $Uptime \r\n\r

Current version is: $SystemVer \r
Upstream version is: $UpstreamVer ( channel: $Channel ) \r
System Status: $Status \r\n\r

System Licence Level: $Level \r
Next Renewal At: $Renewal \r
Deadline At: $Deadline \r\n\r

====== WAN STATUS ====== \r\n\r

Interface: $WanInterface \r
IP Address: $WanIP \r
Networek: $WanNetwork \r\n\r

Last Link Down Time: $WanLinkDownTime \r
Last Link Up Time: $WanLinkUpTime \r
Link Downs: $WanLinkDowns \r\n\r

WAN Tx: $[($WanTx / 1048576)] MiB ( as $[($WanTx / 1073741824)] GiB ) \r
WAN Rx: $[($WanRx / 1048576)] MiB ( as $[($WanRx / 1073741824)] GiB ) \r\n\r

WAN Tx Quality -- Drop: $WanTxDrop  Error: $WanTxError \r
WAN Rx Quality -- Drop: $WanRxDrop  Error: $WanRxError \r\n\r

====== CPU ====== \r\n\r

Core: $CpuCores Cores \r
Load: $CpuLoad % \r
Frequency: $CpuFrequency MHz \r\n\r

====== Memory ====== \r\n\r

Free:  $[($MemoryFree / 1048576)] MiB \r
Total: $[($MemoryTotal / 1048576)] MiB \r
Used:  $[(($MemoryTotal / 1048576) - ($MemoryFree / 1048576))] MiB \r\n\r

====== Disk ====== \r\n\r

Free:  $[($DiskFree / 1048576)] MiB \r
Total: $[($DiskTotal / 1048576)] MiB \r
Used:  $[(($DiskTotal / 1048576) - ($DiskFree / 1048576))] MiB \r\n\r

Sector Writes Since Reboot: $DiskWrites \r
Total Sector Writes: $DiskWritesTotal \r\n\r
"
## Fox RouterOS Notification End
